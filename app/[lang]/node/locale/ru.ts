// app/[lang]/node/locale/ru.ts
import type { NodeDict } from "./dict";

const ru: NodeDict = {
  seo: {
    title: "Resultity Node — запускайте модели, зарабатывайте и поддерживайте сеть",
    description:
      "Установите Resultity Node, чтобы запускать модели локально, получать реальные задания инференса и зарабатывать по вкладу. Модульно, в контейнерах и с поддержкой ферм.",
  },

  hero: {
    title: "Resultity Node: ваш GPU — двигатель глобального ИИ",
    subtitle:
      "Лёгкий контейнер: реальные задания инференса и вознаграждения за вклад.",
    blurb:
      "Каждый запрос, обработанный *вашей нодой*, питает агентов, приложения и исследования в Resultity.\nВы не просто запускаете код — вы *подпитываете* новое поколение децентрализованной ИИ-инфраструктуры.",
    ctas: { install: "Установка", waitlist: "Присоединиться" },
  },

  nodeIntro: {
    header: "Resultity Node",
    subheader: "Ваш движок инференса в децентрализованном облаке",
    p1: "Resultity Node — это *лёгкое десктоп-приложение*, связывающее вашу машину с децентрализованным облаком. Оно использует *GPU, CPU, память* и хранилище, чтобы запускать модели локально и общаться с сетью Resultity.",
    p2: "После запуска нода *скачивает модели, получает задания инференса* и синхронизирует состояние. Нода *стабилизирует сеть* и *выполняет задачи* — вознаграждение зависит от реального вклада.",
  },

  howItWorks: {
    header: "Как это работает",
    subheader: "От запроса до награды — каждый шаг прозрачен.",
    consumer: {
      header: "Потребитель инференса",
      subheader: "Запускает запрос",
      p: "Выбирает модель, *отправляет задачу* в сеть и оплачивает инференс.",
    },
    cloud: {
      header: "RTITY Cloud",
      subheader: "Маршрутизирует и балансирует",
      p: "Получает задачу, применяет комиссию и *направляет* её на доступную ноду.",
    },
    node: {
      header: "RTITY Node",
      subheader: "Выполняет и зарабатывает",
      p: "Поддерживает сеть, *выполняет задачу* на GPU и получает вознаграждение.",
    },
    narrative1:
      "Нода подключает ваш GPU к сети Resultity (RTITY): принимает задания от оркестратора, запускает их на локальных моделях и возвращает результаты. Модели ставятся и обновляются автоматически. Каждая задача подписывается, статус синхронизируется с системой.",
    narrative2:
      "Задачи приходят через API. RTITY Cloud маршрутизирует их на ноды и обрабатывает платежи. Часть платежа идёт оператору ноды, остальное поддерживает экосистему. Запущенная нода с установленными моделями — это активная поддержка сети, даже без текущих задач.",
    deeper: {
      title: "Хотите погрузиться глубже?",
      p: "Разберитесь в устройстве сети, системе стимулов и стартовых шагах.",
      ctas: { cloud: "Посмотреть облако", docs: "Прочитать документацию" },
    },
  },

  supportedModels: {
    header: "Поддерживаемые семейства моделей",
    subheader:
      "Ноды Resultity покрывают широкий спектр задач трансформеров — от чата и поиска до зрения, аудио, кода и генеративной графики.",
    tags: {
      phase1: "Тестнет",
      phase2: "Запуск мейннета",
      phase3: "Токенизированный мейннет",
    },
    slides: [
      {
        header: "Чат и поиск",
        text:
          "*Языковая модель для диалога, Q&A и ассистентов.*\n\n" +
          "Модели *LLaMA-2 (7B–70B)*, *Mistral*, *OpenChat* для интерактивных сессий, суммаризации и поиска.\n\n" +
          "*VRAM:* 8+ ГБ для 7B–13B, 24+ ГБ для крупных вариантов.",
        phase: "phase1",
      },
      {
        header: "Голос и транскрибация",
        text:
          "*Распознавание речи и аудио-агенты.*\n\n" +
          "Запускайте *Whisper*, *OpenVoice* и похожие модели для субтитров, транскрибации и клонирования голоса.\n\n" +
          "*VRAM:* от 4 ГБ (доступен fallback на CPU).",
        phase: "phase2",
      },
      {
        header: "Зрение и мультимодальность",
        text:
          "*ИИ видит и понимает изображения.*\n\n" +
          "*LLaVA*, *MiniGPT-4*, *CogVLM* для OCR, подписей, схем и мультимодального рассуждения.\n\n" +
          "*VRAM:* 12+ ГБ для стабильного результата.",
        phase: "phase3",
      },
      {
        header: "Генерация изображений",
        text:
          "*Креативные инструменты на базе диффузионных моделей.*\n\n" +
          "*Stable Diffusion XL*, *Kandinsky*, *Playground v2* — арт, прототипы, батч-рендеринг.\n\n" +
          "*VRAM:* 8+ ГБ (16+ ГБ для высокого разрешения).",
        phase: "phase2",
      },
      {
        header: "Эмбеддинги и поиск",
        text:
          "*Семантический поиск на эмбеддингах трансформеров.*\n\n" +
          "*BGE*, *InstructorXL*, *E5* для RAG, кластеризации и векторного сходства.\n\n" +
          "*VRAM:* 4+ ГБ для базовых моделей, 8–12 ГБ для масштаба.",
        phase: "phase2",
      },
      {
        header: "Функции и инструменты",
        text:
          "*LLM с возможностями плагинов.*\n\n" +
          "*OpenChat Tool*, *GPT4-Function*, *ChatML* — расширенный tool-use и память контекста.\n\n" +
          "*VRAM:* рекомендуется 16+ ГБ.",
        phase: "phase3",
      },
      {
        header: "Генерация кода",
        text:
          "*Автономные ассистенты программирования.*\n\n" +
          "*StarCoder*, *CodeLLaMA*, *DeepseekCoder* для дополнений, трансляций и копилотов в реальном времени.\n\n" +
          "*VRAM:* 8–16+ ГБ в зависимости от размера модели.",
        phase: "phase1",
      },
      {
        header: "RAG и агенты",
        text:
          "*Модульные цепочки с памятью и планированием.*\n\n" +
          "*LangChain*, *Autogen*, *DSPy* — смарт-агенты, сочетающие локальные модели и поиск.\n\n" +
          "*VRAM:* 8–24+ ГБ в зависимости от размера контекста.",
        phase: "phase2",
      },
    ],
    tryAll: {
      title: "Попробуйте все",
      p: "Установите ноду и настройте свою коллекцию моделей",
      cta: "Установить ноду",
    },
  },

  ideology: {
    header: "Идеология ноды",
    subheader:
      "Resultity — больше чем инфраструктура. Это движение за открытые вычисления, где владение, награды и контроль остаются у вас — оператора ноды.",
    p: "Запуская ноду, вы *владеете своим вкладом*, задаёте правила и участвуете в построении децентрализованного будущего, где ресурсы делятся, награждаются и управляются сообществом.",
    biggerIdea: { hint: "Посмотреть идею целиком ➪", cta: "Vision" },
    features: [
      {
        title: "Децентрализация по умолчанию",
        text: "Каждая нода автономна — нет централизованного планировщика, диктующего её цикл жизни. Когда запускать, обновлять и останавливать — решаете вы.",
      },
      {
        title: "Прозрачный заработок",
        text: "Вклад измеряется. Работа вознаграждается. От GPU-времени до хранилища и трафика — каждый ресурс получает свою долю.",
      },
      {
        title: "Независимость",
        text: "Никакого vendor lock-in. Никаких кастодиальных кошельков. Ваши ключи, ваша машина, ваши правила. Всё верифицируется ончейн и в логах.",
      },
      {
        title: "Форма будущего",
        text: "Больше чем исполнитель. Голосуйте за предложения, предлагайте фичи и участвуйте в управлении Resultity как кооперативом вычислений.",
      },
    ],
  },

  designPrinciples: {
    header: "Принципы проектирования RTITY Node",
    subheader:
      "От одиночных установок до многонодных «роёв»: создано для простоты, высокой производительности и прозрачных вознаграждений.",
  },

  dashboard: {
    header: "Панель управления ноды",
    subheader:
      "Единый контроль: лайв-статистика, версии моделей, трекинг нод и награды.",
    col1:
      "Панель ноды — это веб-консоль для управления всем роем развернутых нод, задач и моделей. Она синхронизирует конфигурации, мониторит задачи инференса и балансирует нагрузку в реальном времени.",
    col2:
      "Смотрите историю задач, логи, метрики и меняйте распределение трафика из любого браузера — от одного ПК до целого GPU-кластера. Все апдейты и смены моделей применяются через Docker без прерывания текущих задач.",
  },

  swarm: {
    words: ["swarm", "farm", "multi-nod"],
    suffix: "ING FIRST",
    p1: "Resultity Node создан для *операторов инфраструктуры* и *энтузиастов фарминга*. Никаких командных строк — запуск, мониторинг и масштабирование в едином дашборде.",
    p2: "Модели и логика *обновляются автоматически*. Присоединяйтесь к *тестнету* и получайте RCP на всех *ваших устройствах*.",
  },

  ready: {
    header: "Готовы участвовать?",
    p: "Присоединяйтесь к листу ожидания, будьте одним из первых!",
    cta: "Присоединиться",
  },

  features: [
    {
      title: "Модульная архитектура",
      alt: "Модульная архитектура ноды",
      description:
        "Бинарное ядро, контейнер инференса и изолированное хранилище моделей — готово из коробки.",
    },
    {
      title: "Контейнерный рантайм",
      alt: "Контейнерная среда выполнения",
      description:
        "Среда на Docker: быстрое развёртывание, изоляция и лёгкие апдейты.",
    },
    {
      title: "Самостоятельные модели",
      alt: "Локальное управление моделями",
      description:
        "Модели скачиваются, хранятся и грузятся локально — быстрый старт и офлайн-режим.",
    },
  ],
};

export default ru;
